// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go
//
// Generated by this command:
//
//	mockgen -source=interfaces.go -destination=../../test/mocks/appmocks/app_mocks.go -package=appmocks
//

// Package appmocks is a generated GoMock package.
package appmocks

import (
	reflect "reflect"

	github "github.com/google/go-github/v74/github"
	gomock "go.uber.org/mock/gomock"
)

// MockAppInterface is a mock of AppInterface interface.
type MockAppInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAppInterfaceMockRecorder
	isgomock struct{}
}

// MockAppInterfaceMockRecorder is the mock recorder for MockAppInterface.
type MockAppInterfaceMockRecorder struct {
	mock *MockAppInterface
}

// NewMockAppInterface creates a new mock instance.
func NewMockAppInterface(ctrl *gomock.Controller) *MockAppInterface {
	mock := &MockAppInterface{ctrl: ctrl}
	mock.recorder = &MockAppInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppInterface) EXPECT() *MockAppInterfaceMockRecorder {
	return m.recorder
}

// GetWebhookSecret mocks base method.
func (m *MockAppInterface) GetWebhookSecret() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWebhookSecret")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetWebhookSecret indicates an expected call of GetWebhookSecret.
func (mr *MockAppInterfaceMockRecorder) GetWebhookSecret() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWebhookSecret", reflect.TypeOf((*MockAppInterface)(nil).GetWebhookSecret))
}

// HandleIssueOpened mocks base method.
func (m *MockAppInterface) HandleIssueOpened(payload *github.IssuesEvent) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleIssueOpened", payload)
	ret0, _ := ret[0].(error)
	return ret0
}

// HandleIssueOpened indicates an expected call of HandleIssueOpened.
func (mr *MockAppInterfaceMockRecorder) HandleIssueOpened(payload any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleIssueOpened", reflect.TypeOf((*MockAppInterface)(nil).HandleIssueOpened), payload)
}
