// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/taman9333/issue-estimate-reminder/internal/handlers (interfaces: WebhookEnqueuer)
//
// Generated by this command:
//
//	mockgen -destination=../../test/mocks/handlersmocks/handlers_mocks.go -package=handlersmocks . WebhookEnqueuer
//

// Package handlersmocks is a generated GoMock package.
package handlersmocks

import (
	context "context"
	reflect "reflect"

	queue "github.com/taman9333/issue-estimate-reminder/internal/queue"
	gomock "go.uber.org/mock/gomock"
)

// MockWebhookEnqueuer is a mock of WebhookEnqueuer interface.
type MockWebhookEnqueuer struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookEnqueuerMockRecorder
	isgomock struct{}
}

// MockWebhookEnqueuerMockRecorder is the mock recorder for MockWebhookEnqueuer.
type MockWebhookEnqueuerMockRecorder struct {
	mock *MockWebhookEnqueuer
}

// NewMockWebhookEnqueuer creates a new mock instance.
func NewMockWebhookEnqueuer(ctrl *gomock.Controller) *MockWebhookEnqueuer {
	mock := &MockWebhookEnqueuer{ctrl: ctrl}
	mock.recorder = &MockWebhookEnqueuerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookEnqueuer) EXPECT() *MockWebhookEnqueuerMockRecorder {
	return m.recorder
}

// EnqueueWebhook mocks base method.
func (m *MockWebhookEnqueuer) EnqueueWebhook(ctx context.Context, payload *queue.WebhookPayload) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnqueueWebhook", ctx, payload)
	ret0, _ := ret[0].(error)
	return ret0
}

// EnqueueWebhook indicates an expected call of EnqueueWebhook.
func (mr *MockWebhookEnqueuerMockRecorder) EnqueueWebhook(ctx, payload any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnqueueWebhook", reflect.TypeOf((*MockWebhookEnqueuer)(nil).EnqueueWebhook), ctx, payload)
}
